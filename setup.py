
# ======================================================== #
# File automagically generated by GUI2Exe version 0.5.3
# Copyright: (c) 2007-2012 Andrea Gavana
# ======================================================== #

# Let's start with some default (for me) imports...

from distutils.core import setup
from py2exe.build_exe import py2exe

import glob
import os
import zlib
import shutil

# Remove the build folder
shutil.rmtree("build", ignore_errors=True)


class Target(object):
    """ A simple class that holds information on our executable file. """
    def __init__(self, **kw):
        """ Default class constructor. Update as you need. """
        self.__dict__.update(kw)
        

# Ok, let's explain why I am doing that.
# Often, data_files, excludes and dll_excludes (but also resources)
# can be very long list of things, and this will clutter too much
# the setup call at the end of this file. So, I put all the big lists
# here and I wrap them using the textwrap module.

data_files = [('Logs', ['E:\\project1\\employee\\V3.0.0\\Logs\\__init__.py',
                        'E:\\project1\\employee\\V3.0.0\\Logs\\about.txt',
                        'E:\\project1\\employee\\V3.0.0\\Logs\\disit.txt',
                        'E:\\project1\\employee\\V3.0.0\\Logs\\file2.txt']),
              ('Database', ['E:\\project1\\employee\\V3.0.0\\Database\\__init__.pyc',
                            'E:\\project1\\employee\\V3.0.0\\Database\\ABR.db',
                            'E:\\project1\\employee\\V3.0.0\\Database\\employee.db',
                            'E:\\project1\\employee\\V3.0.0\\Database\\Main.db',
                            'E:\\project1\\employee\\V3.0.0\\Database\\Menu.db',
                            'E:\\project1\\employee\\V3.0.0\\Database\\sendgets.pyc',
                            'E:\\project1\\employee\\V3.0.0\\Database\\wxsq.pyc',
                            'E:\\project1\\employee\\V3.0.0\\Database\\wxsq2.pyc']),
              ('GUI', ['E:\\project1\\employee\\V3.0.0\\GUI\\__init__.pyc',
                       'E:\\project1\\employee\\V3.0.0\\GUI\\BG.pyc',
                       'E:\\project1\\employee\\V3.0.0\\GUI\\MainMenu.pyc',
                       'E:\\project1\\employee\\V3.0.0\\GUI\\proman.pyc',
                       'E:\\project1\\employee\\V3.0.0\\GUI\\window.pyc']),
              ('Res\Splash', ['E:\\project1\\employee\\V3.0.0\\Res\\Splash\\__init__.py',
                              'E:\\project1\\employee\\V3.0.0\\Res\\Splash\\splash3.jpg']),
              ('Res\Icons', ['E:\\project1\\employee\\V3.0.0\\Res\\Icons\\__init__.py',
                             'E:\\project1\\employee\\V3.0.0\\Res\\Icons\\L.bmp',
                             'E:\\project1\\employee\\V3.0.0\\Res\\Icons\\man.jpg',
                             'E:\\project1\\employee\\V3.0.0\\Res\\Icons\\R.bmp',
                             'E:\\project1\\employee\\V3.0.0\\Res\\Icons\\woman.jpg']),
              ('Config', ['E:\\project1\\employee\\V3.0.0\\Config\\__init__.pyc',
                          'E:\\project1\\employee\\V3.0.0\\Config\\config.pyc',
                          'E:\\project1\\employee\\V3.0.0\\Config\\Config.txt',
                          'E:\\project1\\employee\\V3.0.0\\Config\\Init.pyc',
                          'E:\\project1\\employee\\V3.0.0\\Config\\program.ini']),
              ('Res\Pics', ['E:\\project1\\employee\\V3.0.0\\Res\\Pics\\__init__.py',
                            'E:\\project1\\employee\\V3.0.0\\Res\\Pics\\Mypic1.jpg',
                            'E:\\project1\\employee\\V3.0.0\\Res\\Pics\\Mypic2.jpg',
                            'E:\\project1\\employee\\V3.0.0\\Res\\Pics\\Mypic3.jpg',
                            'E:\\project1\\employee\\V3.0.0\\Res\\Pics\\Mypic4.jpg',
                            'E:\\project1\\employee\\V3.0.0\\Res\\Pics\\Mypic5.jpg',
                            'E:\\project1\\employee\\V3.0.0\\Res\\Pics\\Mypic6.jpg']),
              ('Utility', ['E:\\project1\\employee\\V3.0.0\\Utility\\__init__.pyc',
                           'E:\\project1\\employee\\V3.0.0\\Utility\\adadfa1',
                           'E:\\project1\\employee\\V3.0.0\\Utility\\clacal2.pyc',
                           'E:\\project1\\employee\\V3.0.0\\Utility\\clacal3.pyc',
                           'E:\\project1\\employee\\V3.0.0\\Utility\\lanip.pyc',
                           'E:\\project1\\employee\\V3.0.0\\Utility\\src.pyc',
                           'E:\\project1\\employee\\V3.0.0\\Utility\\srchlist.pyc'])]

includes = ['wx', 'wx.lib', 'wx.dataview', 'serial', 'khayyam']
excludes = ['_gtkagg', '_tkagg', 'bsddb', 'curses', 'email', 'pywin.debugger',
            'pywin.debugger.dbgcon', 'pywin.dialogs', 'tcl',
            'Tkconstants', 'Tkinter']
packages = ['Config', 'Database', 'Utility', 'GUI', 'serial', 'serial.tools',
            'GUI.API', 'GUI.Connect', 'GUI.AuiPanel', 'GUI.Develop',
            'GUI.Help', 'GUI.Input', 'GUI.Program', 'GUI.Report',
            'GUI.Edit']
dll_excludes = ['libgdk-win32-2.0-0.dll', 'libgobject-2.0-0.dll', 'tcl84.dll',
                'tk84.dll']
icon_resources = []
bitmap_resources = [(1, 'E:\\project1\\employee\\V3.0.0\\Res\\Icons\\L.bmp'), (2,
                    'E:\\project1\\employee\\V3.0.0\\Res\\Icons\\R.bmp')]
other_resources = [(2, 24, 'E:\\project1\\employee\\V3.0.0\\Res\\Pics\\Mypic1.jpg'),
                   (3, 24, 'E:\\project1\\employee\\V3.0.0\\Res\\Pics\\Mypic2.jpg'),
                   (4, 24, 'E:\\project1\\employee\\V3.0.0\\Res\\Pics\\Mypic3.jpg'),
                   (5, 24, 'E:\\project1\\employee\\V3.0.0\\Res\\Pics\\Mypic4.jpg'),
                   (6, 24, 'E:\\project1\\employee\\V3.0.0\\Res\\Pics\\Mypic5.jpg'),
                   (7, 24, 'E:\\project1\\employee\\V3.0.0\\Res\\Pics\\Mypic6.jpg')]


# This is a place where the user custom code may go. You can do almost
# whatever you want, even modify the data_files, includes and friends
# here as long as they have the same variable name that the setup call
# below is expecting.

# No custom code added


# Ok, now we are going to build our target class.
# I chose this building strategy as it works perfectly for me :-D

GUI2Exe_Target_1 = Target(
    # what to build
    script = "mainpro.py",
    icon_resources = icon_resources,
    bitmap_resources = bitmap_resources,
    other_resources = other_resources,
    dest_base = "mainpro",    
    version = "0.1",
    company_name = "No Company",
    copyright = "No Copyrights",
    name = "Py2Exe Sample File",
    
    )

# No custom class for UPX compression or Inno Setup script

# That's serious now: we have all (or almost all) the options py2exe
# supports. I put them all even if some of them are usually defaulted
# and not used. Some of them I didn't even know about.
                    
setup(

    # No UPX or Inno Setup

    data_files = data_files,

    options = {"py2exe": {"compressed": 0, 
                          "optimize": 0,
                          "includes": includes,
                          "excludes": excludes,
                          "packages": packages,
                          "dll_excludes": dll_excludes,
                          "bundle_files": 3,
                          "dist_dir": "dist",
                          "xref": False,
                          "skip_archive": False,
                          "ascii": False,
                          "custom_boot_script": '',
                         }
              },

    zipfile = None,
    console = [],
    windows = [GUI2Exe_Target_1],
    service = [],
    com_server = [],
    ctypes_com_server = []
    )

# This is a place where any post-compile code may go.
# You can add as much code as you want, which can be used, for example,
# to clean up your folders or to do some particular post-compilation
# actions.

# No post-compilation code added


# And we are done. That's a setup script :-D

